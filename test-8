/int main()
//{
//	int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
//	int k = 7;
//	//写一个代码在arr数组中找到7
//	int i = 0;
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	for (i = 0; i < sz; i++)
//	{
//		if (k == arr[i])
//		{
//			printf("找到了下标是：%d\n",i);
//			break;
//		}
//	}
//	if (i == sz)
//	{
//		printf("找不到\n");
//	}
//	system("pause");
//	return 0;
//}


//int main()
//{
//	int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
//	int k = 7;
//	int sz = sizeof(arr) / sizeof(arr[0]);//计算元素个数
//	int left = 0;//定义左下标
//	int right = sz - 1;//元素个数-1=右下标
//	while (left<=right)
//	{
//		int mid = (left + right) / 2;
//		//第一次确定中间元素下标
//		//通过新的左右下标求出新的中间元素下标
//		if (arr[mid] > k)//看要查找的元素在中间元素的左边还是右边
//		{
//			right = mid - 1;//确定新的左右下标
//		}
//		else if (arr[mid] < k)
//		{
//			left = mid + 1;
//		}
//		else
//		{
//			printf("找到了下标是：%d\n", mid);
//			break;
//		}
//	}if (left>right)
//	{
//		printf("找不到\n");
//	}
//	
//	system("pause");
//	return 0;
//}



//#include<windows.h>
#include<string.h>
//int main()
//{
//	//char arr[]="abc";
//	//[a b c \0]
//	// 0 1 2  3  4-2
//	char arr1[] = "hallo world!!!!!";
//	char arr2[] = "################";
//	int left = 0;//arr1左下标
//	//int right = sizeof(arr1) / sizeof(arr1[0]) - 2;
//	//-1 err错误感叹号后有个\0占一个下标位，得减2
//	int right = strlen(arr1)-1;
//	while (left <= right)
//	{
//		arr2[left] = arr1[left];
//		arr2[right] = arr1[right];
//		printf("%s\n", arr2);
//		//休息一秒
//		Sleep(1000);
//		//system("cls");//清空
//		left++;
//		right--;
//	}
//	
//	system("pause");
//	return 0;
//}




int main()
{
	int i = 0;
	char password[20] = { 0 };
	for (i = 0; i < 3; i++)
	{
		printf("请输入密码：>");
		scanf("%s", password);
		if (strcmp(password , "123456")==0)
			//如果括号中两个字符串相等则返回0  前大于后返回一个较大的数字 前小于后返回一个小于0的数字
			//不能用来比较两个字符串是否相等，应该使用一个库函数——strcmp
		{
			printf("登录成功\n");
			break;
		}
		else{
			printf("密码错误\n");
		}
	}if (i == 3)
		printf("三次密码均错误，退出程序\n");
	system("pause");
	return 0;
}


总结 ：1、练习数组中通过下标查找数字/通过数字查找下标
      2、学习了更为快捷的查找方式——折半查找法
      3、比较两个字符串是否相等——库函数strcmp——括号中两个字符串相等则返回0  前大于后返回一个较大的数字 前小于后返回一个小于0的数字
      4、想让函数运行时稍微停顿用--sleep（）
      5、system("cls")---清空屏幕
